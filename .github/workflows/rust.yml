name: Rust CI/CD

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Rust Nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        components: clippy
        override: true

    - name: Build
      run: cargo build --release

    - name: Test
      run: cargo test --release RISCVBox

    - name: Zip executables (Windows)
      if: startsWith(github.ref, 'refs/tags/') && runner.os == 'windows'
      run: |
        Compress-Archive target\release\RISCVBox.exe RISCVBox.zip;

    - name: Zip executables (Linux)
      if: startsWith(github.ref, 'refs/tags/') && runner.os == 'Linux'
      run: |
        zip -r RISCVBox.zip target/release/RISCVBox;

    - name: Upload build artifacts
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: RISCVBox-${{ matrix.os }}.zip
        path: RISCVBox.zip


  create_release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build artifacts (Ubuntu)
        uses: actions/download-artifact@v4
        with:
          name: RISCVBox-ubuntu-latest.zip
          path: build-ubuntu

      - name: Download build artifacts (Windows)
        uses: actions/download-artifact@v4
        with:
          name: RISCVBox-windows-latest.zip
          path: build-windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_SECRET }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (Ubuntu)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_SECRET }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: build-ubuntu/RISCVBox.zip
          asset_name: RISCVBox-Ubuntu.zip
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_SECRET }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: build-windows/RISCVBox.zip
          asset_name: RISCVBox-Windows.zip
          asset_content_type: application/octet-stream
